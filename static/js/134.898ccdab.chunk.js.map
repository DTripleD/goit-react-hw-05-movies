{"version":3,"file":"static/js/134.898ccdab.chunk.js","mappings":"kOAGaA,EAAeC,EAAAA,EAAAA,GAAH,4EAMZC,EAAiBD,EAAAA,EAAAA,GAAH,sFAKdE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,mNAWVI,EAAaJ,EAAAA,EAAAA,IAAH,oEAKVK,EAAWL,EAAAA,EAAAA,IAAH,gFAMRM,EAAUN,EAAAA,EAAAA,EAAH,kUAePO,EAAcP,EAAAA,EAAAA,IAAH,kGAMXQ,EAAWR,EAAAA,EAAAA,GAAH,2J,SChBrB,EA5BmB,SAAC,GAAe,IAAbS,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MAKjB,OAFAC,QAAQC,IAAIJ,IAGV,0BACE,SAACV,EAAD,iBACGU,QADH,IACGA,OADH,EACGA,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,MAA1B,OACV,SAACjB,EAAD,WACE,UAACC,EAAD,CAAYiB,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMX,GAAhD,WACE,UAACN,EAAD,YACE,SAACC,EAAD,CAAUiB,IAXA,mCAWuBN,EAAaO,IAAI,MAClD,SAACjB,EAAD,CAASkB,UAAU,WAAnB,SAA8B,iBAGhC,SAACjB,EAAD,WACE,SAACC,EAAD,UAAWS,GAAQC,UARJH,EADX,OAiBnB,C,6FCKD,UAvCe,WACb,OAAwCU,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOnB,EAAP,KAAcsB,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAASP,EAAaQ,IAAI,SAC3BD,IAILE,EAAAA,EAAAA,IAAkBF,GACfG,MAAK,SAAAC,GAAI,OAAIN,EAASM,EAAb,IACTC,OAAM,SAAAC,GAAG,OAAI3B,QAAQ4B,MAAMD,EAAlB,GACb,GAAE,CAACb,IAaJ,OACE,iCACE,kBAAMe,SAbW,SAAAC,GACnBA,EAAMC,iBAEDd,EAKLF,EAAgB,CAAEE,MAAAA,IAJhBe,MAAM,kBAMT,EAGG,WACE,kBAAOC,KAAK,OAAOC,QAAS,SAAAC,GAAC,OAAIjB,EAASiB,EAAEC,OAAOC,MAAtB,KAC7B,mBAAQJ,KAAK,SAAb,SAAsB,eAGxB,SAAC,IAAD,CAAYpC,MAAOA,EAAMyC,YAG9B,C,wJC1CD,IAAMC,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAU,gCAEHpB,EAAoB,SAAAF,GAC/B,OAAOuB,MAAM,GAAD,OACPD,EADO,8BACsBtB,EADtB,8CAEVkB,GACAf,MAAK,SAAAqB,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYC,EAAmB,WAC9B,OAAOH,MAAM,GAAD,OAAID,EAAJ,oCAA+CJ,GAASf,MAClE,SAAAqB,GAAQ,OAAIA,EAASC,MAAb,GAEX,EAEYE,EAAiB,SAAA7C,GAC5B,OAAOyC,MAAM,GAAD,OAAID,EAAJ,iBAAoBxC,EAApB,2BAAiDoC,GAASf,MACpE,SAAAqB,GAAQ,OAAIA,EAASC,MAAb,GAEX,EAEYG,EAAiB,SAAA9C,GAC5B,OAAOyC,MAAM,GAAD,OACPD,EADO,iBACSxC,EADT,kCAEVoC,GACAf,MAAK,SAAAqB,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYI,EAAe,SAAA/C,GAC1B,OAAOyC,MAAM,sCAAD,OAC4BzC,EAD5B,mBAEVoC,GACAf,MAAK,SAAAqB,GAAQ,OAAIA,EAASC,MAAb,GAChB,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ListOfMovies = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport const MoviesListItem = styled.li`\n  list-style: none;\n  flex-basis: calc((100% - 150px) / 6);\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover .see-more {\n    transform: translateY(80%);\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n`;\n\nexport const MovieImg = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n`;\n\nexport const SeeMore = styled.p`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  transform: translateY(100%);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: rgba(78, 100, 57, 0.9);\n  font-size: 18px;\n  line-height: 1.56;\n  color: #fff;\n  text-align: center;\n`;\n\nexport const NameWrapper = styled.div`\n  border: 1px solid #eeeeee;\n  border-top: none;\n  padding: 20px 24px;\n`;\n\nexport const FilmName = styled.h2`\n  font-size: 18px;\n  line-height: 2;\n  letter-spacing: 0.06em;\n  margin-bottom: 4px;\n  color: #212121;\n  text-align: center;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  ListOfMovies,\n  MoviesListItem,\n  StyledLink,\n  ImgWrapper,\n  MovieImg,\n  SeeMore,\n  NameWrapper,\n  FilmName,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n\n  console.log(films);\n\n  return (\n    <div>\n      <ListOfMovies>\n        {films?.map(({ id, poster_path, name, title }) => (\n          <MoviesListItem key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <ImgWrapper>\n                <MovieImg src={IMAGES_BASE_URL + poster_path} alt=\"\" />\n                <SeeMore className=\"see-more\">See more</SeeMore>\n              </ImgWrapper>\n\n              <NameWrapper>\n                <FilmName>{name || title}</FilmName>\n              </NameWrapper>\n            </StyledLink>\n          </MoviesListItem>\n        ))}\n      </ListOfMovies>\n    </div>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { searchFilmsByName } from 'services/api';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    const params = searchParams.get('query');\n    if (!params) {\n      return;\n    }\n\n    searchFilmsByName(params)\n      .then(data => setFilms(data))\n      .catch(err => console.error(err));\n  }, [searchParams]);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    if (!query) {\n      alert('Enter something');\n      return;\n    }\n\n    setSearchParams({ query });\n    // setQuery('');\n  };\n  return (\n    <>\n      <form onSubmit={onFormSubmit}>\n        <input type=\"text\" onInput={e => setQuery(e.target.value)} />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <MoviesList films={films.results}></MoviesList>\n    </>\n  );\n};\n\nexport default Movies;\n","const options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTk2NzkxM2YyYTI0MWUwMjZhODZjZGRkOGZhZDA0YyIsInN1YiI6IjY0NzEyMWQyZGQ3MzFiMDBmYWU5Y2RmYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c0BqOYAiI0jKVlZ9l2Yx4Ke1g5cQnB9763DkGfGs40c',\n  },\n};\n\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchFilmsByName = params => {\n  return fetch(\n    `${baseURL}search/movie?query=${params}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => response.json());\n};\n\nexport const getPopularMovies = () => {\n  return fetch(`${baseURL}/trending/all/day?language=en-US`, options).then(\n    response => response.json()\n  );\n};\n\nexport const getCastMembers = id => {\n  return fetch(`${baseURL}movie/${id}/credits?language=en-US`, options).then(\n    response => response.json()\n  );\n};\n\nexport const getMovieReview = id => {\n  return fetch(\n    `${baseURL}movie/${id}/reviews?language=en-US&page=1`,\n    options\n  ).then(response => response.json());\n};\n\nexport const movieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  ).then(response => response.json());\n};\n"],"names":["ListOfMovies","styled","MoviesListItem","StyledLink","Link","ImgWrapper","MovieImg","SeeMore","NameWrapper","FilmName","films","location","useLocation","console","log","map","id","poster_path","name","title","to","state","from","src","alt","className","useSearchParams","searchParams","setSearchParams","useState","query","setQuery","setFilms","useEffect","params","get","searchFilmsByName","then","data","catch","err","error","onSubmit","event","preventDefault","alert","type","onInput","e","target","value","results","options","headers","accept","Authorization","baseURL","fetch","response","json","getPopularMovies","getCastMembers","getMovieReview","movieDetails"],"sourceRoot":""}