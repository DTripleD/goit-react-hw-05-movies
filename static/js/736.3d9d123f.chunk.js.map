{"version":3,"file":"static/js/736.3d9d123f.chunk.js","mappings":"iQAEaA,EAAOC,EAAAA,EAAAA,GAAH,uHAQJC,EAAOD,EAAAA,EAAAA,GAAH,iG,SC2BjB,EA/Ba,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeN,GACZO,MAAK,SAAAC,GAAQ,OAAIJ,EAAQI,EAASL,KAArB,IACbM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACV,KAGF,0BACE,SAACH,EAAD,UACGM,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,OACR,UAAClB,EAAD,YACE,gBACEmB,IAAKJ,EAdO,mCAc0BA,EAAeK,EACrDC,IAAKJ,EACLK,MAAM,QACNC,OAAO,WAET,wBAAKN,KACL,yBAAG,cAAYC,OARNF,EADH,OAejB,C,uBCnCD,SAASQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpB,GAEP,YADAc,EAAOd,EAET,CACImB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOzB,KAAKoB,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOlB,GACda,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASlB,EACnE,CACAiB,OAAMe,EACR,GACF,CACF,C,wJC7BMC,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAU,gCAEHC,EAAiB,6BAAG,WAAMC,GAAN,uFACRC,MAAM,GAAD,OACvBH,EADuB,8BACME,EADN,8CAE1BN,GAH6B,cACzBnC,EADyB,gBAKlBA,EAAS2C,OALS,mFAAH,sDAQjBC,EAAgB,6BAAG,oGACPF,MAAM,GAAD,OACvBH,EADuB,oCAE1BJ,GAH4B,cACxBnC,EADwB,gBAKjBA,EAAS2C,OALQ,mFAAH,qDAQhB7C,EAAc,6BAAG,WAAM+C,GAAN,uFACLH,MAAM,GAAD,OACvBH,EADuB,iBACPM,EADO,2BAE1BV,GAH0B,cACtBnC,EADsB,gBAKfA,EAAS2C,OALM,mFAAH,sDAQdG,EAAc,6BAAG,WAAMD,GAAN,uFACLH,MAAM,GAAD,OACvBH,EADuB,iBACPM,EADO,kCAE1BV,GAH0B,cACtBnC,EADsB,gBAKfA,EAAS2C,OALM,mFAAH,sDAQdI,EAAY,6BAAG,WAAMF,GAAN,uFACHH,MAAM,sCAAD,OACYG,EADZ,mBAE1BV,GAHwB,cACpBnC,EADoB,gBAKbA,EAAS2C,OALI,mFAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n  flex-basis: 120px;\n  border: 1px solid #eeeeee;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMembers } from 'services/api';\nimport noImage from '../../images/no-image.jpg';\nimport { List, Item } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    getCastMembers(movieId)\n      .then(response => setCast(response.cast))\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  return (\n    <div>\n      <List>\n        {cast.map(({ profile_path, cast_id, name, character }) => (\n          <Item key={cast_id}>\n            <img\n              src={profile_path ? IMAGES_BASE_URL + profile_path : noImage}\n              alt={name}\n              width=\"120px\"\n              height=\"170px\"\n            />\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTk2NzkxM2YyYTI0MWUwMjZhODZjZGRkOGZhZDA0YyIsInN1YiI6IjY0NzEyMWQyZGQ3MzFiMDBmYWU5Y2RmYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c0BqOYAiI0jKVlZ9l2Yx4Ke1g5cQnB9763DkGfGs40c',\n  },\n};\n\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchFilmsByName = async params => {\n  const response = await fetch(\n    `${baseURL}search/movie?query=${params}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return await response.json();\n};\n\nexport const getPopularMovies = async () => {\n  const response = await fetch(\n    `${baseURL}/trending/all/day?language=en-US`,\n    options\n  );\n  return await response.json();\n};\n\nexport const getCastMembers = async id => {\n  const response = await fetch(\n    `${baseURL}movie/${id}/credits?language=en-US`,\n    options\n  );\n  return await response.json();\n};\n\nexport const getMovieReview = async id => {\n  const response = await fetch(\n    `${baseURL}movie/${id}/reviews?language=en-US&page=1`,\n    options\n  );\n  return await response.json();\n};\n\nexport const movieDetails = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  );\n  return await response.json();\n};\n"],"names":["List","styled","Item","movieId","useParams","useState","cast","setCast","useEffect","getCastMembers","then","response","catch","err","console","error","map","profile_path","cast_id","name","character","src","noImage","alt","width","height","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","options","headers","accept","Authorization","baseURL","searchFilmsByName","params","fetch","json","getPopularMovies","id","getMovieReview","movieDetails"],"sourceRoot":""}