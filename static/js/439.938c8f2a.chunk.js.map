{"version":3,"file":"static/js/439.938c8f2a.chunk.js","mappings":"yQAEaA,E,QAAQC,EAAAA,IAAH,2D,SC8DlB,EAvDqB,WAAO,IAAD,MACzB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAIpDC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaT,GACVU,MAAK,SAAAC,GAAQ,OAAIZ,EAAaY,EAAjB,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACb,IAEJ,IAAMgB,EAAO,IAAIC,KAAKnB,EAAUoB,cAAcC,cACxCC,EAASC,SAAkC,GAAzBvB,EAAUwB,cAElC,OACE,4BACE,SAAC,KAAD,CAAMC,GAAInB,EAAaoB,QAAvB,SAAgC,aAChC,SAAC7B,EAAD,CACE8B,IACW,OAAT3B,QAAS,IAATA,GAAAA,EAAW4B,YAhBK,oCAiBG,OAAG5B,QAAH,IAAGA,OAAH,EAAGA,EAAW4B,aAC7BC,EAENC,IAAK9B,EAAU+B,SAEjB,0BACG/B,EAAU+B,MAAM,KAAGb,EAAK,QAE3B,yBAAII,EAAO,QACX,wBAAI,cACJ,uBAAItB,EAAUgC,YACd,wBAAI,YACJ,8BAAIhC,QAAJ,IAAIA,GAAJ,UAAIA,EAAWiC,cAAf,aAAI,EAAmBC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QACrD,4BACE,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAMZ,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,EAAAa,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAKT,C,wJC9DD,IAAMC,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAU,gCAEHC,EAAoB,SAAAC,GAC/B,OAAOC,MAAM,GAAD,OACPH,EADO,8BACsBE,EADtB,8CAEVN,GACA7B,MAAK,SAAAC,GAAQ,OAAIA,EAASoC,MAAb,GAChB,EAEYC,EAAmB,WAC9B,OAAOF,MAAM,GAAD,OAAIH,EAAJ,oCAA+CJ,GAAS7B,MAClE,SAAAC,GAAQ,OAAIA,EAASoC,MAAb,GAEX,EAEYE,EAAiB,SAAAC,GAC5B,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,iBAAoBO,EAApB,2BAAiDX,GAAS7B,MACpE,SAAAC,GAAQ,OAAIA,EAASoC,MAAb,GAEX,EAEYI,EAAiB,SAAAD,GAC5B,OAAOJ,MAAM,GAAD,OACPH,EADO,iBACSO,EADT,kCAEVX,GACA7B,MAAK,SAAAC,GAAQ,OAAIA,EAASoC,MAAb,GAChB,EAEYtC,EAAe,SAAAyC,GAC1B,OAAOJ,MAAM,sCAAD,OAC4BI,EAD5B,mBAEVX,GACA7B,MAAK,SAAAC,GAAQ,OAAIA,EAASoC,MAAb,GAChB,C","sources":["pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  width: 200px;\n  height: 300px;\n`;\n","import { useEffect, useRef } from 'react';\nimport { useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport noImage from '../images/no-image.jpg';\nimport { movieDetails } from 'services/api';\nimport { Suspense } from 'react';\nimport { Loader } from '../components/Loader/Loader';\nimport { Image } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    movieDetails(movieId)\n      .then(response => setMovieInfo(response))\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  const data = new Date(movieInfo.release_date).getFullYear();\n  const rating = parseInt(movieInfo.vote_average * 10);\n\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Go back</Link>\n      <Image\n        src={\n          movieInfo?.poster_path\n            ? IMAGES_BASE_URL + movieInfo?.poster_path\n            : noImage\n        }\n        alt={movieInfo.title}\n      />\n      <h2>\n        {movieInfo.title} ({data})\n      </h2>\n      <p>{rating}%</p>\n      <h3>Overview</h3>\n      <p>{movieInfo.overview}</p>\n      <h3>Genres</h3>\n      <p>{movieInfo?.genres?.map(genre => genre.name).join(' ')}</p>\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTk2NzkxM2YyYTI0MWUwMjZhODZjZGRkOGZhZDA0YyIsInN1YiI6IjY0NzEyMWQyZGQ3MzFiMDBmYWU5Y2RmYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c0BqOYAiI0jKVlZ9l2Yx4Ke1g5cQnB9763DkGfGs40c',\n  },\n};\n\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchFilmsByName = params => {\n  return fetch(\n    `${baseURL}search/movie?query=${params}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => response.json());\n};\n\nexport const getPopularMovies = () => {\n  return fetch(`${baseURL}/trending/all/day?language=en-US`, options).then(\n    response => response.json()\n  );\n};\n\nexport const getCastMembers = id => {\n  return fetch(`${baseURL}movie/${id}/credits?language=en-US`, options).then(\n    response => response.json()\n  );\n};\n\nexport const getMovieReview = id => {\n  return fetch(\n    `${baseURL}movie/${id}/reviews?language=en-US&page=1`,\n    options\n  ).then(response => response.json());\n};\n\nexport const movieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  ).then(response => response.json());\n};\n"],"names":["Image","styled","useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","movieDetails","then","response","catch","err","console","error","data","Date","release_date","getFullYear","rating","parseInt","vote_average","to","current","src","poster_path","noImage","alt","title","overview","genres","map","genre","name","join","Suspense","fallback","Loader","options","headers","accept","Authorization","baseURL","searchFilmsByName","params","fetch","json","getPopularMovies","getCastMembers","id","getMovieReview"],"sourceRoot":""}