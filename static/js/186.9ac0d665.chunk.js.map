{"version":3,"file":"static/js/186.9ac0d665.chunk.js","mappings":"4KAgCA,UA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeN,GACZO,MAAK,SAAAC,GAAQ,OAAIJ,EAAWI,EAASC,QAAxB,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACX,KAGF,0BACE,wBACGG,EAAQW,OACPX,EAAQY,KAAI,SAAAC,GAAM,OAChB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADA,KAOlB,yBAAK,iDAKd,C,uBC9BD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOhB,GAEP,YADAU,EAAOV,EAET,CACIe,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOtB,KAAKiB,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOd,GACdS,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASd,EACnE,CACAa,OAAMe,EACR,GACF,CACF,C,wJC7BMC,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAU,gCAEHC,EAAiB,6BAAG,WAAMC,GAAN,uFACRC,MAAM,GAAD,OACvBH,EADuB,8BACME,EADN,8CAE1BN,GAH6B,cACzBhC,EADyB,gBAKlBA,EAASwC,OALS,mFAAH,sDAQjBC,EAAgB,6BAAG,oGACPF,MAAM,GAAD,OACvBH,EADuB,oCAE1BJ,GAH4B,cACxBhC,EADwB,gBAKjBA,EAASwC,OALQ,mFAAH,qDAQhBE,EAAc,6BAAG,WAAM/B,GAAN,uFACL4B,MAAM,GAAD,OACvBH,EADuB,iBACPzB,EADO,2BAE1BqB,GAH0B,cACtBhC,EADsB,gBAKfA,EAASwC,OALM,mFAAH,sDAQd1C,EAAc,6BAAG,WAAMa,GAAN,uFACL4B,MAAM,GAAD,OACvBH,EADuB,iBACPzB,EADO,kCAE1BqB,GAH0B,cACtBhC,EADsB,gBAKfA,EAASwC,OALM,mFAAH,sDAQdG,EAAY,6BAAG,WAAMhC,GAAN,uFACH4B,MAAM,sCAAD,OACY5B,EADZ,mBAE1BqB,GAHwB,cACpBhC,EADoB,gBAKbA,EAASwC,OALI,mFAAH,qD","sources":["components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getMovieReview } from 'services/api';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReview(movieId)\n      .then(response => setReviews(response.results))\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {reviews.length ? (\n          reviews.map(review => (\n            <li key={review.id}>\n              <h2>Author: {review.author}</h2>\n              <p>{review.content}</p>\n            </li>\n          ))\n        ) : (\n          <div>We don't have any reviews for this movie.</div>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTk2NzkxM2YyYTI0MWUwMjZhODZjZGRkOGZhZDA0YyIsInN1YiI6IjY0NzEyMWQyZGQ3MzFiMDBmYWU5Y2RmYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c0BqOYAiI0jKVlZ9l2Yx4Ke1g5cQnB9763DkGfGs40c',\n  },\n};\n\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchFilmsByName = async params => {\n  const response = await fetch(\n    `${baseURL}search/movie?query=${params}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return await response.json();\n};\n\nexport const getPopularMovies = async () => {\n  const response = await fetch(\n    `${baseURL}/trending/all/day?language=en-US`,\n    options\n  );\n  return await response.json();\n};\n\nexport const getCastMembers = async id => {\n  const response = await fetch(\n    `${baseURL}movie/${id}/credits?language=en-US`,\n    options\n  );\n  return await response.json();\n};\n\nexport const getMovieReview = async id => {\n  const response = await fetch(\n    `${baseURL}movie/${id}/reviews?language=en-US&page=1`,\n    options\n  );\n  return await response.json();\n};\n\nexport const movieDetails = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  );\n  return await response.json();\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReview","then","response","results","catch","err","console","error","length","map","review","author","content","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","options","headers","accept","Authorization","baseURL","searchFilmsByName","params","fetch","json","getPopularMovies","getCastMembers","movieDetails"],"sourceRoot":""}