{"version":3,"file":"static/js/947.5a597997.chunk.js","mappings":"+PAEaA,E,QAAQC,EAAAA,IAAH,2D,mBCkClB,EAhCc,SAAC,GASR,IAAD,IARJC,UACEC,EAOE,EAPFA,aACAC,EAME,EANFA,aACAC,EAKE,EALFA,YACAC,EAIE,EAJFA,MACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,OAIIC,EAAO,IAAIC,KAAKP,GAAcQ,cAC9BC,EAASC,SAAwB,GAAfT,GAExB,OACE,iCACE,SAACJ,EAAD,CACEc,IAAKT,EAPa,mCAOmBA,EAAcU,EACnDC,IAAKV,KAEP,0BACGA,EAAM,KAAGG,EAAK,QAEjB,yBAAIG,EAAO,QACX,wBAAI,cACJ,uBAAIL,KACJ,wBAAI,YACJ,8BAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAQS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SAG/C,E,UCaD,EArCqB,WAAO,IAAD,IACzB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOnB,EAAP,KAAkBoB,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAQpD,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaT,GACVU,MAAK,SAAAC,GAAQ,OAAIZ,EAAaY,EAAjB,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACb,KAGF,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAYgB,GAAIZ,EAAaa,QAA7B,SAAsC,aACtC,SAAC,EAAD,CAAOtC,UAAWA,KAClB,4BACE,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAMqC,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,EAAAE,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,aAMX,C,mMC1CYC,EAAY3C,EAAAA,EAAAA,IAAH,oHAOT4C,EAAO5C,EAAAA,EAAAA,KAAH,sEAKJ6C,EAAS7C,EAAAA,EAAAA,OAAH,sTAgBN8C,GAAa9C,EAAAA,EAAAA,GAAO+C,EAAAA,GAAP/C,CAAH,qRAeVgD,EAAehD,EAAAA,EAAAA,IAAH,oE,wJC9CzB,IAAMiD,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAU,gCAEHC,EAAoB,SAAAC,GAC/B,OAAOC,MAAM,GAAD,OACPH,EADO,8BACsBE,EADtB,8CAEVN,GACAjB,MAAK,SAAAC,GAAQ,OAAIA,EAASwB,MAAb,GAChB,EAEYC,EAAmB,WAC9B,OAAOF,MAAM,GAAD,OAAIH,EAAJ,oCAA+CJ,GAASjB,MAClE,SAAAC,GAAQ,OAAIA,EAASwB,MAAb,GAEX,EAEYE,EAAiB,SAAAC,GAC5B,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,iBAAoBO,EAApB,2BAAiDX,GAASjB,MACpE,SAAAC,GAAQ,OAAIA,EAASwB,MAAb,GAEX,EAEYI,EAAiB,SAAAD,GAC5B,OAAOJ,MAAM,GAAD,OACPH,EADO,iBACSO,EADT,kCAEVX,GACAjB,MAAK,SAAAC,GAAQ,OAAIA,EAASwB,MAAb,GAChB,EAEY1B,EAAe,SAAA6B,GAC1B,OAAOJ,MAAM,sCAAD,OAC4BI,EAD5B,mBAEVX,GACAjB,MAAK,SAAAC,GAAQ,OAAIA,EAASwB,MAAb,GAChB,C","sources":["components/Movie/Movie.style.jsx","components/Movie/Movie.jsx","pages/MovieDetails.jsx","pages/MovieDetails.styled.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  width: 200px;\n  height: 300px;\n`;\n","import { Image } from './Movie.style';\nimport noImage from '../../images/no-image.jpg';\nimport PropTypes from 'prop-types';\n\nconst Movie = ({\n  movieInfo: {\n    release_date,\n    vote_average,\n    poster_path,\n    title,\n    overview,\n    genres,\n  },\n}) => {\n  const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n  const data = new Date(release_date).getFullYear();\n  const rating = parseInt(vote_average * 10);\n\n  return (\n    <>\n      <Image\n        src={poster_path ? IMAGES_BASE_URL + poster_path : noImage}\n        alt={title}\n      />\n      <h2>\n        {title} ({data})\n      </h2>\n      <p>{rating}%</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <p>{genres?.map(genre => genre.name).join(' ')}</p>\n    </>\n  );\n};\n\nexport default Movie;\n\nMovie.propTypes = {\n  release_date: PropTypes.string,\n  vote_average: PropTypes.number,\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  overview: PropTypes.string,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n    })\n  ),\n};\n","import { useEffect, useRef } from 'react';\nimport { useState } from 'react';\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom';\n\nimport { movieDetails } from 'services/api';\nimport { Suspense } from 'react';\nimport { Loader } from '../components/Loader/Loader';\nimport Movie from '../components/Movie/Movie';\nimport { Container, MovieWrapper, StyledLink } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    movieDetails(movieId)\n      .then(response => setMovieInfo(response))\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  return (\n    <Container>\n      <MovieWrapper>\n        <StyledLink to={backLinkHref.current}>Go back</StyledLink>\n        <Movie movieInfo={movieInfo} />\n        <div>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </MovieWrapper>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  background-color: #4caf50;\n  border: none;\n  font-size: 15px;\n  color: #ffffff;\n  padding: 10px;\n  width: 100px;\n  text-align: center;\n  transition-duration: 0.4s;\n  text-decoration: none;\n  overflow: hidden;\n  cursor: pointer;\n  margin-left: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  border-radius: 4px;\n  background-color: #f4511e;\n  border: none;\n  color: #ffffff;\n  text-align: center;\n  font-size: 15px;\n  padding: 10px;\n  width: 75px;\n  transition: all 0.5s;\n  cursor: pointer;\n  margin: 5px;\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","const options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTk2NzkxM2YyYTI0MWUwMjZhODZjZGRkOGZhZDA0YyIsInN1YiI6IjY0NzEyMWQyZGQ3MzFiMDBmYWU5Y2RmYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c0BqOYAiI0jKVlZ9l2Yx4Ke1g5cQnB9763DkGfGs40c',\n  },\n};\n\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchFilmsByName = params => {\n  return fetch(\n    `${baseURL}search/movie?query=${params}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => response.json());\n};\n\nexport const getPopularMovies = () => {\n  return fetch(`${baseURL}/trending/all/day?language=en-US`, options).then(\n    response => response.json()\n  );\n};\n\nexport const getCastMembers = id => {\n  return fetch(`${baseURL}movie/${id}/credits?language=en-US`, options).then(\n    response => response.json()\n  );\n};\n\nexport const getMovieReview = id => {\n  return fetch(\n    `${baseURL}movie/${id}/reviews?language=en-US&page=1`,\n    options\n  ).then(response => response.json());\n};\n\nexport const movieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  ).then(response => response.json());\n};\n"],"names":["Image","styled","movieInfo","release_date","vote_average","poster_path","title","overview","genres","data","Date","getFullYear","rating","parseInt","src","noImage","alt","map","genre","name","join","useState","setMovieInfo","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","movieDetails","then","response","catch","err","console","error","to","current","Suspense","fallback","Loader","Container","Form","Button","StyledLink","Link","MovieWrapper","options","headers","accept","Authorization","baseURL","searchFilmsByName","params","fetch","json","getPopularMovies","getCastMembers","id","getMovieReview"],"sourceRoot":""}